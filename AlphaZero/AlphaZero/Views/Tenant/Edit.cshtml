@model AlphaZero.Models.tenant

@{
    ViewBag.Title = "Edit";
}
<style>
    .custom-footer {
        background-color: #ffffff;
    }
</style>
<!-- Add Bootstrap CSS and JavaScript -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-pzjw8Q+uaqZDhYL9+5qzV5ILEweJyGlxBKlkh/35IQfRZGGiXiKP4+qFqspi1EWE" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-pzjw8Q+uaqZDhYL9+5qzV5ILEweJyGlxBKlkh/35IQfRZGGiXiKP4+qFqspi1EWE" crossorigin="anonymous"></script>

@if (TempData["SuccessMessage"] != null)
{

    <div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Success</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <p>@TempData["SuccessMessage"]</p>
                </div>

            </div>
            <div class="modal-footer custom-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
        </div>
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#successModal').modal('show');
        });

        $('#successModal').on('hidden.bs.modal', function (e) {
            $(this).remove();
        });
    </script>
}




<!-- Modal -->
@using (Html.BeginForm("Edit", "Tenant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Change Room?</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.tenant_id)
                    @Html.HiddenFor(model => model.tenant_ic)
                    @Html.HiddenFor(model => model.tenant_uploadIC)
                    @Html.HiddenFor(model => model.tenant_name)
                    @Html.HiddenFor(model => model.tenant_contract)
                    @Html.HiddenFor(model => model.tenant_phoneNo)
                    @Html.HiddenFor(model => model.tenant_emergencyNo)
                    @Html.HiddenFor(model => model.tenant_noSiri)
                    @Html.HiddenFor(model => model.tenant_inDate)
                    @Html.HiddenFor(model => model.tenant_outDate)
                    @Html.HiddenFor(model => model.tenant_outSession)
                    @Html.HiddenFor(model => model.tenant_outstanding)
                    @Html.HiddenFor(model => model.tenant_paymentStatus)


                    <div class="form-group">
                        @Html.LabelFor(model => model.room_id, "Floor", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("floor_id", null, "Please select a floor!", htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.room_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.room_id, "Room Number", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("room_id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.room_id, "", new { @class = "text-danger" })
                        </div>


                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" value="Save" class="btn btn-warning" />


                </div>
            </div>
        </div>
    </div>
}
<div class="col-md-offset-2 col-md-10">

</div>
<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Tenant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>tenant</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.tenant_id)

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_ic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_ic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant_ic, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group row">
        @Html.LabelFor(model => model.tenant_uploadIC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-12 col-md-10">
            @if (!string.IsNullOrEmpty(Model.tenant_uploadIC))
            {
                <img src="@Url.Action("GetFile", "Floor", new { floorLayoutFileName = Model.tenant_uploadIC })" alt="CCTV QR" style="max-height: 200px; margin-bottom: 10px;" />
            }
            <div> <input type="file" name="tenantIC" id="tenantIC" /></div>

            @Html.ValidationMessageFor(model => model.tenant_uploadIC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.tenant_contract, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-12 col-md-10">
            @if (!string.IsNullOrEmpty(Model.tenant_contract))
            {
                <img src="@Url.Action("GetFile", "Floor", new { floorLayoutFileName = Model.tenant_contract })" alt="Contract" style="max-height: 200px; margin-bottom: 10px;" />
            }
            <div> <input type="file" name="tenantContract" id="tenantContract" /></div>

            @Html.ValidationMessageFor(model => model.tenant_contract, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_phoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_phoneNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant_phoneNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_emergencyNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_emergencyNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant_emergencyNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_noSiri, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_noSiri, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant_noSiri, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_inDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_inDate, new { htmlAttributes = new { @class = "form-control", type = "date", Value = Model.tenant_inDate.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.tenant_inDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_outDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_outDate, new { htmlAttributes = new { @class = "form-control", type = "date", Value = Model.tenant_outDate.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.tenant_outDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_outSession, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("tenant_outSession", new List<SelectListItem>
             {
                 new SelectListItem { Text = "-- Session --", Selected = true, Disabled = true },
                 new SelectListItem { Text = "Morning", Value = "Morning" },
                 new SelectListItem { Text = "Afternoon", Value = "Afternoon" },
                 new SelectListItem { Text = "Night", Value = "Night" },
                 new SelectListItem { Text = "Unknown", Value = "Unknown" }
             }, new { @class = "form-control", @required = true })
            @Html.ValidationMessageFor(model => model.tenant_outSession, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.tenant_outstanding, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant_outstanding, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant_outstanding, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tenant_paymentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("tenant_paymentStatus", new List<SelectListItem>
              {
                  new SelectListItem { Text = "-- Payment Status --", Selected = true, Disabled = true },
                  new SelectListItem { Text = "Fully Paid", Value = "Fully Paid" },
                  new SelectListItem { Text = "Partially Paid", Value = "Partially Paid" },
                  new SelectListItem { Text = "Unpaid ", Value = "Unpaid" }
              }, new { @class = "form-control", @required = true })
            @Html.ValidationMessageFor(model => model.tenant_paymentStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.room_id)

    <div class="form-group">
        Room
        <div class="col-md-10">
            @Html.DisplayFor(model => model.room.floor_id)
            No @Html.DisplayFor(model => model.room.room_number)

            <!-- Button to trigger the modal -->
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Change Room</button>

        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-warning" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {
            $("#floor_id").change(function () {
                var selectedFloorId = $(this).val();
                var roomNumberDropdown = $("#room_id");

                $.ajax({
                    url: '@Url.Action("GetRoomNumbers", "Tenant")',
                    type: 'POST',
                    data: { floorId: selectedFloorId },
                    dataType: 'json',
                    success: function (data) {
                        roomNumberDropdown.empty();
                        $.each(data, function (index, item) {
                            roomNumberDropdown.append($('<option/>', {
                                value: item.Value,
                                text: item.Text
                            }));
                        });
                    },
                    error: function () {
                        alert('Error occurred while retrieving room numbers.');
                    }
                });
            });
        });


    </script>




}
